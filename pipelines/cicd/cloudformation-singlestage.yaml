
AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Continous Delievery: This template
  builds an AWS CodePipeline pipeline that implements a continuous delivery release
  process for AWS CloudFormation stacks. Push change to github and it will build
  the code, then release it to test.  Once approvded in test, will release in
  staging.  Once approved in staging, it will create
  a changeset in prod.  Approve the changeset and it will deploy in prod.

Parameters:
  RelCloudFormationTemplatePath:
    Description: Path of the cloudformation template, relative to your codebase
    Type: String
    Default: aws/cloudformation/ecs-service-elb.yaml
  CloudFormationTemplateParameters:
    Description: Test stack - Relative JSON config file that contains parameters passed to RelCloudFormationTemplatePath CloudFormation
    Type: String
    Default: aws/cloudformation/parameters/test--ecs-service-parameters-codepipeline.json
  BuildParameterOverrides:
    Default: '{"ContainerImage":{"Fn::GetParam":["MyAppBuild","build.json","CodeImage"]}}'
    Description: CloudFormation paramater overrides. build.json is exported from your buildspec.yaml
    Type: String
  ApprovalNotificationArn:
    Description: ARN to receive notifications for approvals
    Type: String
    Default: arn:aws:sns:us-east-1:254269105181:code-promotion-approvals
  GithubOAuthToken:
    Description: The GitHub Personal Access Token so CodePipeline can get the code. https://github.com/settings/tokens.  Needs repo scope.
    Type: String
    NoEcho: true
  BuildTimeout:
    Description: Timeout in minutes for the build
    Type: Number
    Default: 5
  BuildTimeoutTest:
    Description: Timeout in minutes for the lint and tests
    Type: Number
    Default: 5
  CodeBuildImageTest:
    Description: Image for the CodeBuild container that runs linting and test cases.
    Type: String
    Default: golang:1.9.3
  CodeBuildImage:
    Description: Image for the CodeBuild container that builds the final app docker image.  See https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html
    Type: String
    Default: aws/codebuild/docker:1.12.1   
  CodeEntryPointFilePath:
    Description: The path to the root of your source code base, relative to the project root
    Type: String
    Default: cmd/appName/main.go
  RelDockerfilePath:
    Description: Path to the Dockerfile to use for the build, relative to your CodeEntryPointFilePath
    Type: String
    Default: build/Dockerfile
  CodeBuildProjectTestBuildSpecPath:
    Description: Path to the buildspec used to run testcases, relative to your codebase
    Type: String
    Default: aws/codebuild/testcases-buildspec.yaml
  CodeBuildProjectBuildSpecPath:
    Description: Path to the buildspec used to build your app image, relative to your codebase
    Type: String
    Default: aws/codebuild/app-buildspec.yaml   

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "CloudFormation Template Settings"
        Parameters:
          - RelCloudFormationTemplatePath
      - Label:
          default: "CloudFormation template parameters"
        Parameters:
          - CloudFormationTemplateParameters
      - Label:
          default: "Test cases and linting"
        Parameters:
          - CodeBuildImageTest
          - CodeBuildProjectTestBuildSpecPath
          - BuildTimeoutTest          
      - Label:
          default: "Build"
        Parameters:
          - CodeBuildProjectBuildSpecPath
          - CodeEntryPointFilePath
          - RelDockerfilePath
          - BuildParameterOverrides
          - CodeBuildImage
          - BuildTimeout

Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuild
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
                Effect: Allow
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*:*"
              - Action:
                - "s3:PutObject"
                - "s3:GetObject"
                - "s3:GetObjectVersion"
                Effect: Allow
                Resource:
                  - "arn:aws:s3:::codepipeline-us-east-1-*"
              - Action:
                - 's3:*'
                - 'ecr:*'
                Effect: Allow
                Resource: '*'

  CodeBuildProjectTest:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join ['--', ['testcases',!Ref 'AWS::StackName']]
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        PrivilegedMode: false
        Type: LINUX_CONTAINER
        Image: !Ref CodeBuildImageTest
        EnvironmentVariables:
          - Name: CODE_ENTRY_POINT_FILE_PATH
            Value: !Ref CodeEntryPointFilePath
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: IMAGE_REPO_NAME
            Value: !Join [ '/', [ !Select [ 0, !Split [ '--', !Ref 'AWS::StackName' ] ] , !Select [ 1, !Split [ '--', !Ref 'AWS::StackName' ] ] ] ]
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref CodeBuildProjectTestBuildSpecPath
      TimeoutInMinutes: !Ref BuildTimeoutTest

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref 'AWS::StackName'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        Image: !Ref CodeBuildImage
        EnvironmentVariables:
          - Name: CODE_ENTRY_POINT_FILE_PATH
            Value: !Ref CodeEntryPointFilePath
          - Name: DOCKERFILE_PATH
            Value: !Ref RelDockerfilePath
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: IMAGE_REPO_NAME
            Value: !Join [ '/', [ !Select [ 0, !Split [ '--', !Ref 'AWS::StackName' ] ] , 'branches' ] ]
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref CodeBuildProjectBuildSpecPath
      TimeoutInMinutes: !Ref BuildTimeout

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'ArtifactStoreBucket'
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Ref AWS::StackName
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              OutputArtifacts:
                - Name: MyApp
              Configuration:
                Owner: doapp
                Repo: !Select [ 0, !Split [ '--', !Ref 'AWS::StackName' ] ]
                PollForSourceChanges: true
                Branch: !Select [ 1, !Split [ '--', !Ref 'AWS::StackName' ] ]
                OAuthToken: !Ref GithubOAuthToken
              RunOrder: 1
        - Name: Testcases
          Actions:
            - Name: CodeBuild
              InputArtifacts:
                - Name: MyApp
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              OutputArtifacts:
                - Name: MyAppTestcases
              Configuration:
                ProjectName: !Ref CodeBuildProjectTest
              RunOrder: 1             
        - Name: Build
          Actions:
            - Name: CodeBuild
              InputArtifacts:
                - Name: MyApp
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              OutputArtifacts:
                - Name: MyAppBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        - Name: !Select [ 1, !Split [ '--', !Ref 'AWS::StackName' ] ]
          Actions:
            - Name: !Select [ 1, !Split [ '--', !Ref 'AWS::StackName' ] ]
              InputArtifacts:
                - Name: MyApp
                - Name: MyAppBuild
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              RunOrder: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CFNRole.Arn
                Capabilities: CAPABILITY_IAM
                StackName: !Join [ '--', [ 'test', !Ref 'AWS::StackName' ] ]
                ChangeSetName: ChangeSet
                TemplatePath: !Sub "MyApp::${RelCloudFormationTemplatePath}"
                TemplateConfiguration: !Sub "MyApp::${CloudFormationTemplateParameters}"
                ParameterOverrides: !Ref BuildParameterOverrides
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: ChangeSet
                RoleArn: !GetAtt CFNRole.Arn
                StackName: !Join [ '--', [ 'test', !Ref 'AWS::StackName' ] ]
              RunOrder: 2

  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - '*'
                Effect: Allow
                Resource: '*'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                - 'sns:Publish'
                - 'codebuild:BatchGetBuilds'
                - 'codebuild:StartBuild'
                Effect: Allow
                Resource: '*'
